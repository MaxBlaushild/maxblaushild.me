{"version":3,"sources":["components/Background.jsx","App.js","index.js"],"names":["nearPlane","farPlane","fieldOfView","fogHex","fogDensity","particleCount","parameters","Background","render","react_default","a","createElement","id","className","_this","props","classes","background","componentDidMount","windowHalfX","window","innerWidth","windowHalfY","innerHeight","aspectRatio","camera","THREE","position","z","scene","fog","materials","container","document","getElementById","createParticles","renderer","setPixelRatio","devicePixelRatio","setSize","appendChild","domElement","addEventListener","onWindowResize","animate","aspect","updateProjectionMatrix","geometry","i","vertex","x","Math","random","y","vertices","push","parameterCount","length","size","particles","rotation","add","requestAnimationFrame","newFrame","time","Date","now","lookAt","children","color","setHex","Component","withStyles","top","left","zIndex","App","src","alt","href","components_Background","ReactDOM","src_App_0"],"mappings":"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","file":"static/js/main.ac5e80d7.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport * as THREE from 'three';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = {\n    background: {\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        zIndex: -1000000\n    }\n};\n\nconst nearPlane = 1;\nconst farPlane = 5000;\nconst fieldOfView = 75\nconst fogHex = 0x000000;\nconst fogDensity = 1;\nconst particleCount = 1000;\nconst parameters = [[16737792, 25], [414463, 20], [16737792, 15], [414463, 10], [16737792, 5]];\n\n\nclass Background extends Component {\n\trender = () => <div id='background' className={this.props.classes.background} />\n\n\tcomponentDidMount = () => {\n\t\tthis.windowHalfX = window.innerWidth / 2;\n\t\tthis.windowHalfY = window.innerHeight / 2;\n\t\tthis.aspectRatio = this.windowHalfX / this.windowHalfY;\n\n\t\tthis.camera = new THREE.PerspectiveCamera(fieldOfView, this.aspectRatio, nearPlane, farPlane);\n        this.camera.position.z = farPlane / 3;\n        this.scene = new THREE.Scene();\n        this.scene.fog = new THREE.FogExp2(fogHex, fogDensity);\n        this.scene.background = new THREE.Color( 0xffffff );\n        this.materials = [];\n\n        const container = document.getElementById('background');\n\n        this.createParticles();\n\n        this.renderer = new THREE.WebGLRenderer();\n        this.renderer.setPixelRatio(window.devicePixelRatio);\n        this.renderer.setSize(window.innerWidth, window.innerHeight);\n\n        container.appendChild(this.renderer.domElement);\n\n        window.addEventListener('resize', this.onWindowResize, false);\n\n        this.animate();\n\n\t}\n\n    onWindowResize = () => {\n        this.windowHalfX = window.innerWidth / 2;\n        this.windowHalfY = window.innerHeight / 2;\n\n        this.camera.aspect = window.innerWidth / window.innerHeight;\n        this.camera.updateProjectionMatrix();\n        this.renderer.setSize(window.innerWidth, window.innerHeight);\n    };\n\n    createParticles = () => {\n    \tconst geometry = new THREE.Geometry();\n\n        for (let i = 0; i < particleCount; i++) {\n            var vertex = new THREE.Vector3();\n            vertex.x = Math.random() * 4000 - 2000;\n            vertex.y = Math.random() * 4000 - 2000;\n            vertex.z = Math.random() * 4000 - 2000;\n            geometry.vertices.push(vertex);\n        }\n\n        const parameterCount = parameters.length;\n\n        for (let i = 0; i < parameterCount; i++) {\n            const size  = parameters[i][1];\n            this.materials[i] = new THREE.PointCloudMaterial({size:size});\n            const particles = new THREE.PointCloud(geometry, this.materials[i]);\n            particles.rotation.x = Math.random() * 6;\n            particles.rotation.y = Math.random() * 6;\n            particles.rotation.z = Math.random() * 6;\n            this.scene.add(particles);\n        }\n\n    }\n\n    animate = () => {\n    \trequestAnimationFrame(this.animate);\n    \tthis.newFrame();\n    }\n\n    newFrame = () => {\n\t    const time = Date.now() * 0.00005;\n\n\t    this.camera.position.x += (this.camera.position.x) * -0.05;\n\t    this.camera.position.y += (this.camera.position.y) * -0.05;\n\n\t    this.camera.lookAt(this.scene.position);\n\n\t    for (let i = 0; i < this.scene.children.length; i ++) {\n\t      const object = this.scene.children[i];\n\n\t        object.rotation.y = time * (i < 4 ? i + 3 : - (i + 3));\n\t    }\n\n\t    for (let i = 0; i < this.materials.length; i ++) {\n\t      const color = parameters[i][0];\n\t      this.materials[i].color.setHex(color);\n\t    }\n\n\t    this.renderer.render(this.scene, this.camera);\n    }\n}\n\nexport default withStyles(styles)(Background);\n","import React, { Component } from 'react';\nimport './App.css';\nimport Background from './components/Background';\nimport EmailIcon from '@material-ui/icons/Email';\nimport AttachmentIcon from '@material-ui/icons/Attachment';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src=\"/profile.png\" className=\"App-logo\" alt=\"logo\" />\n          <h1 className=\"App-text\">\n            Hey! I'm Max ðŸ‘‹\n          </h1>\n          <h4 className=\"App-text\">\n            I'm here to write code and chew bubble gum, and I don't type with my mouth so I can do both at the same time.\n          </h4>\n          <h4 className=\"App-text\">\n            I work on all parts of the stack, and blockchain too! Hit me up for any and all contracting inquiries at blaushmild@gmail.com\n          </h4>\n          <div>\n            <a href='https://github.com/MaxBlaushild'>\n              <img className='App-img' src='/github.png' />\n            </a>\n            <a href='https://www.linkedin.com/in/maxblaushild/'>\n              <img className='App-img' src='/linkedin.png' />\n            </a>\n            <a href='mailto:blaushmild@gmail.com'>\n              <img className='App-img' src='/email.png' />\n            </a>\n            <a href='https://docs.google.com/document/d/15uyI4pOxXB7tlMVj9sf95XeYiRA2882iFWcFuMLyO_s/edit?usp=sharing'>\n              <img className='App-img' src='/resume.png' />\n            </a>\n          </div>\n          <Background />\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}